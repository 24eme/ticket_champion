{{> header}}

<section class="d-flex justify-content-center">

  <h2 class="text-center texte-intro">Bonjour {{employee}}, que veux-tu manger ?</h2>
  <div class="row">
    <form action="/plats" method="POST">
    <div class="row container-card col-md-8">
      {{#each data.data.restaurants.[0].plats}}
        <div class="col-sm-2 card-plats">
          <div class="card">
            <img class="card-img-top" src={{this.img}} alt="image du plat" style="border-radius: 15px;">
            <div class="card-body">
              <h5 class="card-title">{{this.nom}} - {{this.prix}}€</h5>
              <p class="liste-ingredients">{{this.ingredients}}</p>
              <input type="hidden" id="button-hidden{{@index}}" name="{{this.nom}},{{this.prix}}" value="0"/>
              <input type="button" id="button-ajouter{{@index}}" class="btn btn-primary bouton-plats" name="{{this.nom}} , {{this.prix}}" value="Ajouter à la commande" onclick="addValue('button-hidden{{@index}}');" />
               
            </div>
          </div>
        </div>
      {{/each}}
      {{!-- <input type="hidden" id="button-hidden" name="Mon bouton hidden" value=""/> --}}
     

    </div>
   
    
    

    <div class="col-md-1 shadowed-div" style="border-radius: 15px;">
      <section id="recap-section">
        <h2 class="text-center texte-intro" style="font-size: 1.5rem">Panier</h2>
        <ul id="recap-commande"></ul>
      </section>
    </div>
  </div>

<div class="container-prev-next">
  <a href='/clients'>
    <button class="btn btn-primary btn-previous" name="pre"> Précédent </button>
  </a>
  
    <input type="submit" class="btn btn-primary btn-next" name="next" value="Suivant"/>
    
  
</div>
 </form>



</section>

<script>



function addValue(id) {
  const buttonHidden = document.getElementById(id);
  
  buttonHidden.value++;
  console.log(buttonHidden.value);
}


  const allButton = document.querySelectorAll('.bouton-plats');
  const recapCommande = document.getElementById('recap-commande');
  let commande = {}; // initialisation de l'objet commande

  allButton.forEach(button => {
    button.addEventListener('click', (event) => {
      const buttonText = event.target.id;
      const prix = event.target.name;

      // incrémentation de la quantité
      if (commande.hasOwnProperty(buttonText)) {
        commande[buttonText].quantite += 1;
      } else {
        commande[buttonText] = {
          quantite: 1,
          prix: prix
        };
      }

      //update total
      function updateTotal() {
        let total = 0;

        Object.keys(commande).forEach((plat) => {
          total += commande[plat].quantite * commande[plat].prix;
        });

        const totalItem = document.querySelector('#recap-commande li:last-child');
        totalItem.textContent = `Total : ${total}€`;
      }

      // affichage du récapitulatif
      recapCommande.innerHTML = '';
      let total = 0;
      Object.keys(commande).forEach((plat) => {
        const item = document.createElement('li');
        const deleteButton = document.createElement('button');
        deleteButton.innerHTML = 'X';
        deleteButton.addEventListener('click', () => {
          delete commande[plat];
          recapCommande.removeChild(item);
          updateTotal();

          // Supprimer l'élément correspondant dans le DTO
          const xhr = new XMLHttpRequest();
          xhr.open('DELETE', `/plats/${plat}`);
          xhr.send();
        });
        item.innerHTML += `${commande[plat].quantite} x ${plat} - ${commande[plat].prix}€`;
        item.appendChild(deleteButton);
        recapCommande.appendChild(item);

        total += commande[plat].quantite * commande[plat].prix;
      });

      const totalItem = document.createElement('li');
      totalItem.textContent = `Total : ${total}€`;
      recapCommande.appendChild(totalItem);
    });
  });
</script>

{{> footer}}
